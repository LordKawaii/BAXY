<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room = Room_Boss</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>213</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_music</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_music</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Screen Save

room_goto(Room_Boss);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for agreement
//Check when not in start screen
if (room = rm_1) and (roomClear_G)
{
    
    /*var i = 0;
    var players;
    
    if instance_exists(obj_player1)
    {
        players[i] = instance_find(0, obj_player1);
        i += 1;
    }
    
    if instance_exists(obj_player2)
    {
        players[i] = instance_find(0, obj_player2);
        i += 1;
    }
    
    if instance_exists(obj_player3)
    {
        players[i] = instance_find(0, obj_player3);
        i += 1;
    }

    if instance_exists(obj_player4)
    {
        players[i] = instance_find(0, obj_player4);
        i += 1;
    }*/
    
    //for (i = 0; i &lt; instance_number(obj_player_par); i += 1)
    //{
    //     players[i] = instance_find(i, obj_player_par);
    //}
    //Check if players have aggred
    switch (numPlayerSel)
    {
        case 1:
            with (ds_list_find_value(players, 0))
            {
                if conferm = true
                {
                    obj_controller.playersConfermed = true;
                }
            }
            break;
        case 2:
            var tempPlayer1 = ds_list_find_value(players, 0);
            var tempPlayer2 = ds_list_find_value(players, 1);
            if (tempPlayer1.conferm = true) and (tempPlayer2.conferm = true)
            {
                if (tempPlayer1.answer == tempPlayer2.answer)
                {
                    playersConfermed = true;
                }
                else
                {
                    tempPlayer1.conferm = false;
                    tempPlayer2.conferm = false;
                    
                    tempPlayer1.answer = "NULL";
                    tempPlayer2.answer = "NULL";
                    
                    tempPlayer1.canTalk = true;
                    tempPlayer2.canTalk = true;
                }
            }   
            break;
        
        case 3:
            var tempPlayer1 = ds_list_find_value(players, 0);
            var tempPlayer2 = ds_list_find_value(players, 1);
            var tempPlayer3 = ds_list_find_value(players, 2);
            if (tempPlayer1.conferm = true) and (player[1].conferm = true) and (player[2].conferm = true)
            {
                if (tempPlayer1 == tempPlayer2.answer) and (tempPlayer1 == tempPlayer3.answer)
                {
                    playersConfermed = true;
                }
                else
                {
                    tempPlayer1.conferm = false;
                    tempPlayer2.conferm = false;
                    tempPlayer3.conferm = false;
                    
                    tempPlayer1.answer = "NULL";
                    tempPlayer2.answer = "NULL";
                    tempPlayer3.answer = "NULL";
                    
                    tempPlayer1.canTalk = true;
                    tempPlayer2.canTalk = true;
                    tempPlayer3.canTalk = true;
                }
            }   
            break;
            
        case 4:
            var tempPlayer1 = ds_list_find_value(players, 0);
            var tempPlayer2 = ds_list_find_value(players, 1);
            var tempPlayer3 = ds_list_find_value(players, 2);
            var tempPlayer4 = ds_list_find_value(players, 3);
            if (tempPlayer1.conferm = true) and (tempPlayer2.conferm = true) and (tempPlayer3.conferm = true) and (tempPlayer4.conferm = true)
            {
                if (tempPlayer1.answer == tempPlayer2.answer) and (tempPlayer1.answer == tempPlayer3.answer) and (tempPlayer1.answer == tempPlayer4.answer)
                {
                    playersConfermed = true;
                }
                else
                {
                    tempPlayer1.conferm = false;
                    tempPlayer2.conferm = false;
                    tempPlayer3.conferm = false;
                    tempPlayer4.conferm = false;
                    
                    tempPlayer1.answer = "NULL";
                    tempPlayer2.answer = "NULL";
                    tempPlayer3.answer = "NULL";
                    tempPlayer4.answer = "NULL";
                    
                    tempPlayer1.canTalk = true;
                    tempPlayer2.canTalk = true;
                    tempPlayer3.canTalk = true;
                    tempPlayer4.canTalk = true;
                }
            }   
            break;
            
    }//end switch
    
    if playersConfermed = true
    {    
        //Open Door
        var tempPlayer1 = ds_list_find_value(players, 0);
        
        switch (tempPlayer1.answer)
        {
            case "A":
                doorSouth.opened = true;
                break;
            case "X":
                doorWest.opened = true;
                break;
            case "B":
                doorEast.opened = true;
                break;
            case "Y":
                doorNorth.opened = true;
                break;
            case "Boss":
                if (!inBossRoom)
                {
                    room_goto(Room_Boss);
                    inBossRoom = true;
                }
                break;
        }
        playersConfermed = false;
    }
    /*
    if ((obj_player1.conferm == true) and (obj_player2.conferm == true) and (obj_player3.conferm == true) and (obj_player4.conferm == true))
    {
        if ((obj_player1.answer == obj_player2.answer) and (obj_player1.answer == obj_player3.answer) and (obj_player1.answer == obj_player4.answer))
        {
            //Open Door
            switch (players[0].answer)
            {
                case "A":
                    doorSouth.opened = true;
                    break;
                case "X":
                    doorWest.opened = true;
                    break;
                case "B":
                    doorEast.opened = true;
                    break;
                case "Y":
                    doorNorth.opened = true;
                    break;
                case "Boss":
                    if (!inBossRoom)
                    {
                        room_goto(Room_Boss);
                        inBossRoom = true;
                    }
                    break;
            }
        }
        else
        {
            obj_player1.canTalk = true;
            obj_player2.canTalk = true;
            obj_player3.canTalk = true;
            obj_player4.canTalk = true;
            
            obj_player1.conferm = false;
            obj_player2.conferm = false;
            obj_player3.conferm = false;
            obj_player4.conferm = false;
            
            obj_player1.answer = "NULL";
            obj_player2.answer = "NULL";
            obj_player3.answer = "NULL";
            obj_player4.answer = "NULL";
        }
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for cleared room
//Check when not in start screen
if room != rm_Start
{
    if instance_number(obj_enemy_par) &lt;= 0
    {
        obj_controller.roomClear_G = true;
        obj_controller.numPlayersDead = 0;
        
        if obj_controller.player1Start_G = true
        {
            if (obj_player1.dead)
            {
                obj_player1.hp = obj_controller.hp_max_G/2;
                obj_player1.sprite_index = spr_player1;
                obj_player1.dead = false;
            }
        }
        
        if obj_controller.player2Start_G = true
        {
            if (obj_player2.dead)
            {
                obj_player2.hp = obj_controller.hp_max_G/2;
                obj_player2.sprite_index = spr_player2;
                obj_player2.dead = false;
            }
        }
    
        if obj_controller.player3Start_G = true
        {
            if (obj_player3.dead)
            {
                obj_player3.hp = obj_controller.hp_max_G/2;
                obj_player3.sprite_index = spr_player3;
                obj_player3.dead = false;
            }
       }
       
       if obj_controller.player4Start_G = true
       {
           if (obj_player4.dead)
           {
                   obj_player4.hp = obj_controller.hp_max_G/2;
                   obj_player4.sprite_index = spr_player4;
                   obj_player4.dead = false;
           }
       }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Starting Players
if room = rm_Start
{

    //Restart screen saver
    if (player1Start_G = false and player2Start_G = false and player3Start_G = false and player4Start_G = false)
    {
        if(gamepad_button_check(0,gp_start) or gamepad_button_check(1,gp_start) or gamepad_button_check(2,gp_start) or gamepad_button_check(3,gp_start))
        {
            game_restart();    
        }
        
    }
    
    //Player1
    if (gamepad_button_check(0, gp_face1))
    {
        player1Start_G = true;
    }
    if (gamepad_button_check(0, gp_face2))
    {
        player1Start_G = false;
    }
    
    //Player2
    if (gamepad_button_check(1, gp_face1))
    {
        player2Start_G = true;
    }
    if (gamepad_button_check(1, gp_face2))
    {
        player2Start_G = false;
    }
    
    //Player3
    if (gamepad_button_check(2, gp_face1))
    {
        player3Start_G = true;
    }
    if (gamepad_button_check(2, gp_face2))
    {
        player3Start_G = false;
    }
    
    //Player4
    if (gamepad_button_check(3, gp_face1))
    {
        player4Start_G = true;
    }
    if (gamepad_button_check(3, gp_face2))
    {
        player4Start_G = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug Commands
if (keyboard_check(vk_home))
{
/*
    obj_player1.answer = "Boss";
    obj_player1.conferm = true;
 
    obj_player2.answer = "Boss";
    obj_player2.conferm = true;
    
    obj_player3.answer = "Boss";
    obj_player3.conferm = true;
    
    obj_player4.answer = "Boss";
    obj_player4.conferm = true;
    */
    room_goto(Room_Boss);
}

if (keyboard_check(vk_end))
{
 game_restart();
}
if (keyboard_check(vk_escape))
{
    game_end();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restart on all players dead
if numPlayersDead = numPlayerSel and room != rm_Start
{
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = rm_Start
{
    //alarm[0] = 5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create players
if playersCreated = false and room != rm_Start
{
    var i = 0;
    var player_temp;
    if player1Start_G == true 
    {
        ds_list_add(players, instance_create(24, 24, obj_player1));
        //player_temp = instance_create(24, 24, obj_player1);
        player_temp = ds_list_find_value(players, i);
        player_temp.persistent = true;
        //players[i].persistent = true;
        i += 1;
       
    }
    
    if player2Start_G == true
    {
        ds_list_add(players, instance_create(232, 224, obj_player2));
        player_temp = ds_list_find_value(players, i);
        player_temp.persistent = true;
        i += 1;
    }
    
    if player3Start_G == true
    {
        ds_list_add(players, instance_create(232, 24, obj_player3));
         player_temp = ds_list_find_value(players, i);
         player_temp.persistent = true;
        i += 1;
    }
    
    if player4Start_G == true
    {
        ds_list_add(players, instance_create(24, 224, obj_player4));
         player_temp = ds_list_find_value(players, i);
         player_temp.persistent = true;
        i += 1;
    }
    
    numPlayerSel = i;
    playersCreated = true;       
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Find Doors
doorEast = instance_find(obj_door_East,0);
doorWest = instance_find(obj_door_West,0);
doorNorth = instance_find(obj_door_North,0);
doorSouth = instance_find(obj_door_South,0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset all player variables
//Check when not in start screen

if room != rm_Start
{
    var j;
    for (j = 0; j &lt; numPlayerSel; j +=1)
    {
        with (ds_list_find_value(players, j))
        {
            canTalk = true;
            conferm = false;
            answer = "NULL";
            
            switch (j)
            {
                case 0:
                    phy_position_x = 24;
                    phy_position_y = 24;
                    sprite_index = spr_player1;
                    break;
                case 1:
                    x = 232;
                    y = 224;
                    sprite_index = spr_player2;
                    break;
                case 2:
                    phy_position_x = 232;
                    phy_position_y = 24;
                    sprite_index = spr_player3;
                    break;
                case 3:
                    phy_position_x = 24;
                    phy_position_y = 224;
                    sprite_index = spr_player4;
                    break;
            }
        }
        
    }
    /*
    //Player 1
    if player1Start_G = true
    {
        obj_player1.canTalk = true;
        obj_player1.conferm = false;
        obj_player1.answer = "NULL";
        obj_player1.phy_position_x = 24;
        obj_player1.phy_position_y = 24;
    }
    
    //Player 2
    if player2Start_G = true
    {        
        obj_player2.canTalk = true;
        obj_player2.conferm = false;
        obj_player2.answer = "NULL";
        obj_player2.phy_position_x = 232;
        obj_player2.phy_position_y = 224;
    }
     
    //Player 3
    if player3Start_G = true
    {   
        obj_player3.conferm = false;
        obj_player3.canTalk = true;
        obj_player3.answer = "NULL";
        obj_player3.phy_position_x = 232;
        obj_player3.phy_position_y = 24;
    }

    //Player 4
    if player4Start_G = true
    {
        obj_player4.answer = "NULL";    
        obj_player4.conferm = false;
        obj_player4.canTalk = true;
        obj_player4.phy_position_x = 24;
        obj_player4.phy_position_y = 224;
    }
    */
}    
    
obj_controller.roomClear_G = false;
obj_controller.room_confermed = false;
    
if room = Room_Boss
{
    audio_stop_sound(snd_music);
    if !audio_is_playing(snd_bossmusic)
        {
            audio_play_sound(snd_bossmusic, 1, true);
            }
            
}

if room = rm_1
{
    scr_spawn();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Global Var Setup
hp_max_G = 25;
walkSpd_G = 1;
bulletSize_G = 1;
reloadSpd_G = 15;
roomClear_G = false;
lastDoor_G = "null";
roomsCleared_G = 0;
numSel_G = 0;

player1Start_G = false;
player2Start_G = false;
player3Start_G = false;
player4Start_G = false;

players = ds_list_create();
playersCreated = false;
inBossRoom = false;
numPlayerSel = 0;
numPlayersDead = 0;
room_confermed = false;
playersConfermed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
