<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup Vars
cooldown= true;
persistent = true;
roomClear = false;
roomsCleared = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset controler vibration
gamepad_set_vibration(parrentConNum, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset cooldown
cooldown=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Aim and fire
if instance_number(parrent)=1{
x=parrent.x;
y=parrent.y;}

if (!parrent.dead)

{
    // aim
    if point_distance(x,y,x+gamepad_axis_value(parrentConNum,gp_axisrh)*256,y+gamepad_axis_value(parrentConNum,gp_axisrv)*256)&gt; 200 //Point
        {
        image_angle=point_direction(x,y,x+gamepad_axis_value(parrentConNum,gp_axisrh)*256,y+gamepad_axis_value(parrentConNum,gp_axisrv)*256)
        xangle=gamepad_axis_value(parrentConNum,gp_axisrh)*256
        yangle=gamepad_axis_value(parrentConNum,gp_axisrv)*256
        angle=image_angle
        }
    
        //shoot  
    if gamepad_button_check(parrentConNum,gp_shoulderrb)&amp;&amp; cooldown =true
    
        {  
        cooldown = false;
        alarm[0]=obj_controller.reloadSpd_G;
         bullet=instance_create(x,y,obj_bullet);
         with(bullet)
            {
                phy_rotation = other.image_angle;
                phy_speed_x = lengthdir_x(10,other.image_angle);
                phy_speed_y = lengthdir_y(10,other.image_angle);
                image_xscale *= obj_controller.bulletSize_G;
                image_yscale *= obj_controller.bulletSize_G;
            }
         instance_create(x,y,obj_smoke);
          instance_create(x,y,obj_smoke);
           instance_create(x,y,obj_smoke);
            instance_create(x,y,obj_smoke);
         instance_create(x,y,obj_explosion);
         instance_create(x,y,obj_screenshake);
         gamepad_set_vibration(parrentConNum, 1, 1);
         alarm[1]=2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw crosshair
if (!parrent.dead)
{
    draw_self()
    if point_distance(x,y,x+gamepad_axis_value(parrentConNum,gp_axisrh)*256,y+gamepad_axis_value(parrentConNum,gp_axisrv)*256)&gt;64
        {
        draw_sprite(spr_crosshair1,1,x+gamepad_axis_value(parrentConNum,gp_axisrh)*64,y+gamepad_axis_value(parrentConNum,gp_axisrv)*64)
       }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
